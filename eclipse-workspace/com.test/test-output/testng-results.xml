<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="10" passed="9" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-02-05T06:18:48 GMT" name="Grouping" finished-at="2024-02-05T06:18:53 GMT" duration-ms="4430">
    <groups>
      <group name="car">
        <method signature="GroupingTest.car1()[pri:0, instance:TestNgExample.GroupingTest@65c7a252]" name="car1" class="TestNgExample.GroupingTest"/>
        <method signature="GroupingTest.car2()[pri:0, instance:TestNgExample.GroupingTest@65c7a252]" name="car2" class="TestNgExample.GroupingTest"/>
        <method signature="GroupingTest.car3()[pri:0, instance:TestNgExample.GroupingTest@65c7a252]" name="car3" class="TestNgExample.GroupingTest"/>
        <method signature="GroupingTest.sedan()[pri:0, instance:TestNgExample.GroupingTest@65c7a252]" name="sedan" class="TestNgExample.GroupingTest"/>
      </group> <!-- car -->
      <group name="3Wheeler">
        <method signature="GroupingTest.AutoRiksaw()[pri:0, instance:TestNgExample.GroupingTest@65c7a252]" name="AutoRiksaw" class="TestNgExample.GroupingTest"/>
        <method signature="GroupingTest.Riksaw()[pri:0, instance:TestNgExample.GroupingTest@65c7a252]" name="Riksaw" class="TestNgExample.GroupingTest"/>
      </group> <!-- 3Wheeler -->
      <group name="Sedan">
        <method signature="GroupingTest.sedan()[pri:0, instance:TestNgExample.GroupingTest@65c7a252]" name="sedan" class="TestNgExample.GroupingTest"/>
      </group> <!-- Sedan -->
    </groups>
    <test started-at="2024-02-05T06:18:48 GMT" name="Groupingttest" finished-at="2024-02-05T06:18:53 GMT" duration-ms="4430">
      <class name="TestNgExample.RegistrationTesr">
        <test-method is-config="true" signature="OpenBrowser()[pri:0, instance:TestNgExample.RegistrationTesr@27406a17]" started-at="2024-02-05T06:18:48 GMT" name="OpenBrowser" finished-at="2024-02-05T06:18:51 GMT" duration-ms="2382" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OpenBrowser -->
        <test-method signature="Validatepage()[pri:0, instance:TestNgExample.RegistrationTesr@27406a17]" started-at="2024-02-05T06:18:51 GMT" name="Validatepage" finished-at="2024-02-05T06:18:53 GMT" duration-ms="1816" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Validatepage -->
        <test-method signature="validatename()[pri:0, instance:TestNgExample.RegistrationTesr@27406a17]" started-at="2024-02-05T06:18:51 GMT" name="validatename" finished-at="2024-02-05T06:18:51 GMT" duration-ms="163" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//input[@placeholder="First Name"]"}
  (Session info: chrome=116.0.5845.140)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.14.0', revision: 'e5a96349ce'
System info: os.name: 'Windows Server 2019', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [247d6b92ec138641e05fa432f31cde0e, findElement {using=xpath, value=//input[@placeholder="First Name"]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 116.0.5845.140, chrome: {chromedriverVersion: 116.0.5845.96 (1a3918166880..., userDataDir: C:\Program Files\scoped_dir...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:65148}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:65148/devtoo..., se:cdpVersion: 116.0.5845.140, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 247d6b92ec138641e05fa432f31cde0e]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//input[@placeholder="First Name"]"}
  (Session info: chrome=116.0.5845.140)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.14.0', revision: 'e5a96349ce'
System info: os.name: 'Windows Server 2019', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [247d6b92ec138641e05fa432f31cde0e, findElement {using=xpath, value=//input[@placeholder="First Name"]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 116.0.5845.140, chrome: {chromedriverVersion: 116.0.5845.96 (1a3918166880..., userDataDir: C:\Program Files\scoped_dir...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:65148}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:65148/devtoo..., se:cdpVersion: 116.0.5845.140, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 247d6b92ec138641e05fa432f31cde0e
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:359)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:353)
at TestNgExample.RegistrationTesr.validatename(RegistrationTesr.java:27)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at org.testng.internal.thread.graph.TestNGFutureTask.run(TestNGFutureTask.java:22)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatename -->
        <test-method is-config="true" signature="BrowserClose()[pri:0, instance:TestNgExample.RegistrationTesr@27406a17]" started-at="2024-02-05T06:18:53 GMT" name="BrowserClose" finished-at="2024-02-05T06:18:53 GMT" duration-ms="183" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BrowserClose -->
      </class> <!-- TestNgExample.RegistrationTesr -->
      <class name="TestNgExample.GroupingTest">
        <test-method signature="AutoRiksaw()[pri:0, instance:TestNgExample.GroupingTest@65c7a252]" started-at="2024-02-05T06:18:48 GMT" name="AutoRiksaw" finished-at="2024-02-05T06:18:48 GMT" duration-ms="19" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoRiksaw -->
        <test-method signature="Riksaw()[pri:0, instance:TestNgExample.GroupingTest@65c7a252]" started-at="2024-02-05T06:18:48 GMT" name="Riksaw" finished-at="2024-02-05T06:18:48 GMT" duration-ms="22" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Riksaw -->
        <test-method signature="car1()[pri:0, instance:TestNgExample.GroupingTest@65c7a252]" started-at="2024-02-05T06:18:48 GMT" name="car1" finished-at="2024-02-05T06:18:48 GMT" duration-ms="20" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- car1 -->
        <test-method signature="car2()[pri:0, instance:TestNgExample.GroupingTest@65c7a252]" started-at="2024-02-05T06:18:48 GMT" name="car2" finished-at="2024-02-05T06:18:48 GMT" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- car2 -->
        <test-method signature="sedan()[pri:0, instance:TestNgExample.GroupingTest@65c7a252]" started-at="2024-02-05T06:18:49 GMT" name="sedan" finished-at="2024-02-05T06:18:49 GMT" duration-ms="26" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sedan -->
        <test-method signature="car3()[pri:0, instance:TestNgExample.GroupingTest@65c7a252]" started-at="2024-02-05T06:18:49 GMT" name="car3" finished-at="2024-02-05T06:18:49 GMT" duration-ms="15" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- car3 -->
      </class> <!-- TestNgExample.GroupingTest -->
      <class name="TestNgExample.TestNgAnnotation">
        <test-method is-config="true" signature="BeforeSuite()[pri:0, instance:TestNgExample.TestNgAnnotation@563f38c4]" started-at="2024-02-05T06:18:48 GMT" name="BeforeSuite" finished-at="2024-02-05T06:18:48 GMT" duration-ms="18" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeSuite -->
        <test-method is-config="true" signature="BeforeTest()[pri:0, instance:TestNgExample.TestNgAnnotation@563f38c4]" started-at="2024-02-05T06:18:48 GMT" name="BeforeTest" finished-at="2024-02-05T06:18:48 GMT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTest -->
        <test-method is-config="true" signature="BeforeClass()[pri:0, instance:TestNgExample.TestNgAnnotation@563f38c4]" started-at="2024-02-05T06:18:48 GMT" name="BeforeClass" finished-at="2024-02-05T06:18:48 GMT" duration-ms="15" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method is-config="true" signature="BeforeMethod()[pri:0, instance:TestNgExample.TestNgAnnotation@563f38c4]" started-at="2024-02-05T06:18:48 GMT" name="BeforeMethod" finished-at="2024-02-05T06:18:48 GMT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method signature="Testcase3()[pri:-1, instance:TestNgExample.TestNgAnnotation@563f38c4]" started-at="2024-02-05T06:18:48 GMT" name="Testcase3" finished-at="2024-02-05T06:18:48 GMT" duration-ms="18" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Testcase3 -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:TestNgExample.TestNgAnnotation@563f38c4]" started-at="2024-02-05T06:18:48 GMT" name="AfterMethod" finished-at="2024-02-05T06:18:48 GMT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method is-config="true" signature="BeforeMethod()[pri:0, instance:TestNgExample.TestNgAnnotation@563f38c4]" started-at="2024-02-05T06:18:49 GMT" name="BeforeMethod" finished-at="2024-02-05T06:18:49 GMT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method signature="testcase1()[pri:0, instance:TestNgExample.TestNgAnnotation@563f38c4]" started-at="2024-02-05T06:18:49 GMT" name="testcase1" finished-at="2024-02-05T06:18:49 GMT" duration-ms="17" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase1 -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:TestNgExample.TestNgAnnotation@563f38c4]" started-at="2024-02-05T06:18:49 GMT" name="AfterMethod" finished-at="2024-02-05T06:18:49 GMT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method is-config="true" signature="AfterClass()[pri:0, instance:TestNgExample.TestNgAnnotation@563f38c4]" started-at="2024-02-05T06:18:49 GMT" name="AfterClass" finished-at="2024-02-05T06:18:49 GMT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterClass -->
        <test-method is-config="true" signature="AfterTest()[pri:0, instance:TestNgExample.TestNgAnnotation@563f38c4]" started-at="2024-02-05T06:18:53 GMT" name="AfterTest" finished-at="2024-02-05T06:18:53 GMT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTest -->
        <test-method is-config="true" signature="AfterSuite()[pri:0, instance:TestNgExample.TestNgAnnotation@563f38c4]" started-at="2024-02-05T06:18:53 GMT" name="AfterSuite" finished-at="2024-02-05T06:18:53 GMT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterSuite -->
      </class> <!-- TestNgExample.TestNgAnnotation -->
    </test> <!-- Groupingttest -->
  </suite> <!-- Grouping -->
</testng-results>
